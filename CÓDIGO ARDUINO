#include <PubSubClient.h>

#include <UIPEthernet.h>
#include <utility/logging.h>

#include <SPI.h>

int pino2 = 2;
bool estado_sensor;

boolean mensagem;

//Define o endereço MAC que será utilizado
byte mac[] = {0x68, 0x08, 0x2F, 0xA1, 0x77, 0x25};

//Inicia o cliente Ethernet
EthernetClient client;

PubSubClient mqttClient(client);

void setup() {

// put your setup code here, to run once:
pinMode(pino2, INPUT_PULLUP);
    
    //Inicia o controlador Ethernet e solicita um IP para o servidor de DHCP
    Ethernet.begin(mac);

    //Inicia o monitor Serial
    Serial.begin(9600);
    
    //Define o IP e POrta TCP do Broker MQTT que vamos utilizar
    mqttClient.setServer("54.173.148.114",1883);

    //Exibe no Monitor Serial as informações sobre o IP do Arduino
    Serial.print("O IP do Arduino e: ");
    Serial.println(Ethernet.localIP());

    //Exibe no Monitor Serial as informações sobre a Máscara de Rede do Arduino
    Serial.print("A Mascara de Rede do Arduino e: ");
    Serial.println(Ethernet.subnetMask());

    //Exibe no Monitor Serial as informações sobre o Gateway do Arduino
    Serial.print("O Gateway do Arduino e: ");
    Serial.println(Ethernet.gatewayIP());

    //Exibe uma linha em branco
    Serial.println("");

}

void loop() {

  //Define o nome do cliente MQTT e efetua a conexão com o servidor.
  mqttClient.connect("giulianomartinusso");

// put your main code here, to run repeatedly:
estado_sensor = digitalRead(pino2);

if(estado_sensor == 0) {
  mensagem = mqttClient.publish("giulianomartinusso-t", "FECHADO");
  Serial.println("RACK FECHADO!");

}
else{
  mensagem = mqttClient.publish("giulianomartinusso-t", "ABERTO");
  Serial.println("RACK ABERTO!");
 
}

  mqttClient.loop();

  Serial.println(mensagem);
  
    
}
